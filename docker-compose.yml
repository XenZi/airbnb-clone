version: "3.8"

services:
  auth-service:
    build:
      context: ./auth-service/
      dockerfile: Dockerfile
    restart: always
    container_name: "auth-server"
    hostname: "auth-server"
    volumes:
      - ./auth-service:/app/auth-service
      - ./api-gateway:/api-gateway
    #Mapping ports
    ports:
      # <port_on_local>:<port_in_machine>
      - 8080:8080
    #Will be accessible through os.Getenv("PORT")
    environment:
      - PORT=8080
      - JWT_SECRET=JWTSECRETKEY
      - AUTH_SERVICE_ADDRESS=${AUTH_SERVICE_ADDRESS}
      # NoSQL: environment variable holding connection URI for Mongo database
      # protocol://username:password@hostname:port
      - MONGO_DB_URI=mongodb://root:pass@mongo:27017
      # - MONGO_DB_URI=mongodb://mongo:27017
    # NoSQL: Our service will try to connect to Mongo before it is up
    # in order to avoid that problem, we specify that it depends on mongo service
    # which defines the order of starting the containers
    # Additionaly we specify that mongo service needs to pass a healthcheck
    depends_on:
      mongo:
        condition: service_healthy

  # NoSQL: MongoDB
  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
      MONGO_INITDB_DATABASE: mongoDemo
    # Docker healtcheck - checks if database is "alive"
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - mongo_store:/data/db

  # NoSQL: MognoExpress
  mongo-express:
    image: mongo-express
    restart: always
    environment:
      # hostname of mongo databse
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    volumes:
      - mongo_express_data:/data/db

  api_gateway:
    image: api-gateway
    container_name: api-gateway
    hostname: api-gateway
    build:
      context: ./api-gateway/
      dockerfile: Dockerfile
    restart: always
    environment:
      AUTH_SERVICE_ADDRESS: auth-service:8080
      GATEWAY_ADDRESS: ${GATEWAY_ADDRESS}
    depends_on:
      - auth-service
    networks:
      - network
    ports:
      - "8000:8000"
    volumes:
      - ./api-gateway:/api-gateway
networks:
  network:
    driver: bridge

volumes:
  mongo:
  mongo-express:
  mongo_store: # Define the volume here
  mongo_express_data: # Define the volume here

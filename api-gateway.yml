apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-configmap
data:
  api-gateway.conf: |
    upstream auth-service {
    server auth-service:8080;
    }
    
    upstream mail-service {
    server mail-service:8080;
    }
    
    upstream accommodations-service {
    server accommodations-service:8080;
    }
    upstream reservations-service {
    server reservations-service:8080;
    }
    
    upstream user-service {
    server user-service:8080;
    }
    
    upstream notifications-service {
    server notifications-service:8080;
    }
    
    upstream recommendation-service {
    server recommendation-service:8080;
    }
    
    upstream metrics-command {
    server metrics-command:8080;
    }
    
    upstream metrics-query {
    server metrics-query:8080;
    }
    
    server {
    listen 443 ssl;
    ssl_certificate /etc/ssl/certs/localhost.crt;
    ssl_certificate_key /etc/ssl/private/localhost.key;
    server_name localhost;
      
    
      location /api/auth/ {
      proxy_pass http://auth-service;
      rewrite ^/api/auth/(.*)$ /$1 break;
      }
      
      location /api/accommodations/ {
      proxy_pass http://accommodations-service;
      rewrite ^/api/accommodations/(.*)$ /$1 break;
      }
      
      location /api/mail/ {
      proxy_pass http://mail-service;
      rewrite ^/api/mail/(.*)$ /$1 break;
      proxy_read_timeout 30s;
      proxy_connect_timeout 10s;
      }
      
      location /api/reservations/ {
      proxy_pass http://reservations-service;
      rewrite ^/api/reservations/(.*)$ /$1 break;
      }
      
      location /api/users/ {
      proxy_pass http://user-service;
      rewrite ^/api/users/(.*)$ /$1 break;
      }
      
      location /api/notifications/ {
      proxy_pass http://notifications-service;
      rewrite ^/api/notifications/(.*)$ /$1 break;
      proxy_read_timeout 30s; 
      proxy_connect_timeout 10s;
      }
      
      location /api/recommendations/ {
      proxy_pass http://recommendation-service;
      rewrite ^/api/recommendations/(.*)$ /$1 break;
      }
      
      location /api/metrics/ {
      proxy_pass http://metrics-command;
      rewrite ^/api/metrics/(.*)$ /$1 break;
      }
      
      location /api/metrics_get/ {
      proxy_pass http://metrics-query;
      rewrite ^/api/metrics-get/(.*)$ /$1 break;
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-otel-module-config
data:
  opentelemetry_module.conf: |
    NginxModuleEnabled ON;
    NginxModuleOtelSpanExporter otlp;
    NginxModuleOtelExporterEndpoint collector:4317;
    NginxModuleServiceName api_gateway;
    NginxModuleServiceNamespace api_gateway;
    NginxModuleServiceInstanceId api_gateway;
    NginxModuleResolveBackends ON;
    NginxModuleTraceAsError ON;
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-otel-collector-config
data:
  otel-collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    exporters:
      jaeger:
        endpoint: jaeger:14250
        tls:
          insecure: true
    service:
      pipelines:
        traces:
          receivers: [otlp]
          exporters: [jaeger]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: airbnb-clone-api-gateway:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 443
          volumeMounts:
            - name: api-gateway-config
              mountPath: /etc/nginx/conf.d
              readOnly: true
            - name: api-gateway-otel-module-config
              mountPath: /etc/nginx/otel-module
              readOnly: true
            - name: api-gateway-otel-collector-config
              mountPath: /etc/nginx/otel-collector
              readOnly: true
      volumes:
        - name: api-gateway-config
          configMap:
            name: api-gateway-configmap
        - name: api-gateway-otel-module-config
          configMap:
            name: api-gateway-otel-module-config
        - name: api-gateway-otel-collector-config
          configMap:
            name: api-gateway-otel-collector-config
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  type: LoadBalancer
  selector:
    app: api-gateway
  ports:
    - port: 443
      targetPort: 443
      protocol: TCP